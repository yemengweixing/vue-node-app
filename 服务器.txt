实例 用户名
root (Linux) / administrator (Windows)
密码
ALYfwq11




i-uf6es3hl9ozgigwuu27r
iZuf6es3hl9ozgigwuu27rZ
101.133.175.59(公网)
172.19.189.104(私网)







cd /

mkdir nodetest && cd nodetest

下载
wget https://nodejs.org/dist/v12.18.0/node-v12.18.0-linux-x64.tar.xz
tar -xvf node-v12.18.0-linux-x64.tar.xz

设置全局变量

ln -s  /nodetest /node-v12.18.0-linux-x64/bin/node  /usr/local/bin

ln -s  /nodetest /node-v12.18.0-linux-x64/bin/npm  /usr/local/bin



输入node -v

解决




安装express模块

npm install express -gd
 //安装express模块

npm install -g express-generator 
//安装express-generator工具

验证express是否安装成功：

express --version

sudo npm install express-generator -g



构建项目
express app
 cd app
 npm install



cd  /nodetest/app
运行   
DEBUG=app:* npm start

101.133.175.59:3000






forever守护nodejs进程 （一直在线访问）
客户端可以正常启动应用，但是如果断开客户端连接，应用也就随之停止了。也就是说这样的启动方式没有给应用一个守护线程

Forever可以解决这个问题！Forever可以守护Node.js应用，客户端断开的情况下，应用也能正常工作

1）安装forever

? ? ? ? ? cd app

? ? ? ? ??npm install forever -g

2）forever启动进程

? ? ? ? ? cd bin

? ? ? ? ??forever start www



?










systemctl restart firewalld   启动防火墙



查看防火墙状态

 firewall-cmd --state

关闭防火墙

如果要开放的端口太多，嫌麻烦，可以关闭防火墙，安全性自行评估

systemctl stop firewalld.service

临时关闭防火墙,重启后会重新自动打开
systemctl restart firewalld




开放端口

firewall-cmd --zone=public --add-port=3000/tcp --permanent   # 开放3000端口

firewall-cmd --zone=public --remove-port=5672/tcp --permanent  #关闭5672端口

firewall-cmd --reload   # 配置立即生效

 

2、查看防火墙所有开放的端口

firewall-cmd --zone=public --list-ports








